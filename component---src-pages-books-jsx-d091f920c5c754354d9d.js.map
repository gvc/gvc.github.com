{"version":3,"file":"component---src-pages-books-jsx-d091f920c5c754354d9d.js","mappings":"6IAEe,SAASA,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAC/B,OACE,gCACE,wBAAMC,UAAU,qCACbD,M,8DCFHE,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OAAIA,EAAKC,MAEL,qBAAGH,UAAU,QACVE,EAAKC,MACN,2BACA,wCAAgBD,EAAKE,YAIlB,qBAAGJ,UAAU,QAAO,wCAAgBE,EAAKE,aAI9CC,EAAW,SAAC,GAAc,IAAZH,EAAW,EAAXA,KAGlB,OAF2BA,EAAKE,UAAUE,MAAM,qBAY9C,gCACE,uBAAKN,UAAU,kBACb,sBAAIA,UAAU,oBAAoBO,wBAAyB,CAAEC,OAAQN,EAAKO,SAC1E,wBAAMT,UAAU,kCAAkCE,EAAKQ,SAEzD,gBAACT,EAAD,CAAcC,KAAMA,KAbpB,uBAAKF,UAAU,aACb,sBAAIA,UAAU,+CAA+CO,wBAAyB,CAAEC,OAAQN,EAAKO,SACrG,yBAAOT,UAAU,WAAjB,uBAiDR,UAjCkB,SAAC,GAAY,IACvBW,EADsB,EAAVC,KACKC,aAAaC,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKC,QAE7D,OACE,gBAAC,IAAD,KACI,sBAAIjB,UAAU,YAAd,cACA,qBAAGA,UAAU,QAAb,gGAGE,2BACA,gBAAC,KAAD,CAAMA,UAAU,6DAA6DkB,GAAG,KAAhF,YAEDP,EAAUI,KAAI,SAACb,EAAMiB,GAAP,OAAiB,gBAACd,EAAD,CAAUH,KAAMA,EAAMkB,IAAG,SAAWlB,EAAKO","sources":["webpack://gvc/./src/components/layout.jsx","webpack://gvc/./src/pages/books.jsx"],"sourcesContent":["import React from \"react\"\n\nexport default function Layout({ children }) {\n  return (\n    <>\n      <main className=\"md:container mx-auto mt-8 text-lg\">\n        {children}\n      </main>\n    </>\n  )\n}\n","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst NotesSection = ({ book }) => {\n  if (book.notes) {\n    return (\n      <p className=\"mb-3\">\n        {book.notes}\n        <br />\n        <span>Read on: {book.date_read}</span>\n      </p>\n    )\n  } else {\n    return <p className='mb-3'><span>Read on: {book.date_read}</span></p>\n  } \n}\n\nconst BookRead = ({ book }) => {\n  const isCurrentlyReading = book.date_read.match(/\\d{4}-\\d{2}-\\d{2}/)\n\n  if (!isCurrentlyReading) {\n    return (\n      <div className=\"flex mb-3\">\n        <h2 className=\"text-xl font-bold text-green-600 bg-gray-200\" dangerouslySetInnerHTML={{ __html: book.title }} />\n        <small className=\"text-xs\">Currently reading</small>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"flex space-x-2\">\n        <h2 className=\"text-xl font-bold\" dangerouslySetInnerHTML={{ __html: book.title }} />\n        <span className=\"text-purple-600 align-baseline\">{book.review}</span>\n      </div>\n      <NotesSection book={book} />\n    </>\n  )\n}\n\nconst BooksPage = ({data}) => {\n  const booksRead = data.allBooksYaml.edges.map((edge) => edge.node);\n  \n  return (\n    <Layout>\n        <h1 className=\"text-3xl\">Books read</h1>\n        <p className=\"mb-3\">\n          This is a list of books I've read since the beginning of 2022 along with\n          my thoughts on each.\n          <br />\n          <Link className=\"underline text-blue-600 hover:bg-blue-600 hover:text-white\" to=\"/\">Go back</Link>\n        </p>\n        {booksRead.map((book, index) => <BookRead book={book} key={`index-${book.title}`} />)}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BooksRead {\n    allBooksYaml(sort: {fields: date_read, order: ASC}) {\n      edges {\n        node {\n            author\n            date_read(formatString: \"YYYY-MM-DD\")\n            title\n            review\n            notes\n        }\n      }\n    }\n  }\n`\n\nexport default BooksPage\n"],"names":["Layout","children","className","NotesSection","book","notes","date_read","BookRead","match","dangerouslySetInnerHTML","__html","title","review","booksRead","data","allBooksYaml","edges","map","edge","node","to","index","key"],"sourceRoot":""}